# .github/workflows/harvest-tourapi.yml
# 목적: TourAPI 축제 데이터 수집(raw_sources) → 변환(events) 자동화
# 주기: 6시간마다 실행 + 수동 실행 지원
# 주의: 모든 시크릿은 레포 Settings → Secrets and variables → Actions 에 등록되어 있어야 함

name: harvest-tourapi

on:
  # 수동 실행
  workflow_dispatch:
  # 스케줄 실행(UTC 기준 6시간마다)
  schedule:
    - cron: "0 */6 * * *"

jobs:
  run:
    runs-on: ubuntu-latest

    # 워크플로에서 사용할 환경 변수(시크릿 포함)
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
      DATA_GO_KR_TOURAPI: ${{ secrets.DATA_GO_KR_TOURAPI }}
      TOUR_LANGS: ko,en,ja,chs,cht   # 사용 언어 목록
      DAYS_AHEAD: 60                 # 오늘로부터 며칠 앞까지 수집할지
      AREACODES: 1,2,3,4,5,6,7,8,31,32,33,34,35,36,37,38,39  # 지역 코드 목록

    steps:
      # 1) 레포 체크아웃
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      # 2) Node.js 설정
      - name: Node 설정
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3) TourAPI 키 상태 요약(퍼센트/플러스/등호 여부 등) 출력
      - name: TourAPI 키 상태 출력(마스킹)
        run: node scripts/print-key-state.mjs

      # 4) TourAPI 키 지문 출력(앞 6글자/뒤 6글자). 포털의 디코딩키와 대조
      - name: TourAPI 키 지문 출력
        run: node scripts/print-tourapi-fingerprint.mjs

      # 5) TourAPI 직접 프로빙(검색 API). 실패해도 파이프라인은 계속 진행
      - name: TourAPI 디버그(searchFestival2 점검)
        run: node scripts/debug-tourapi.mjs
        continue-on-error: true

      # 6) 수확: TourAPI → raw_sources (게이트웨이 일시 오류 대비 1회 재시도)
      - name: 수확 실행(TourAPI → raw_sources)
        run: |
          node scripts/harvest-tourapi-festivals.mjs || (echo "30초 후 재시도"; sleep 30; node scripts/harvest-tourapi-festivals.mjs)

      # 7) 변환: raw_sources → events
      - name: 변환 실행(raw_sources → events)
        run: node scripts/transform-events.mjs

      # 8) 실패 표시(콘솔 로그에 에러 주석 남김)
      - name: 실패 표시
        if: failure()
        run: echo "::error:: harvest-tourapi failed"
